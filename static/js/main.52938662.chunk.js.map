{"version":3,"sources":["components/Header/Header.tsx","components/Footer/Footer.tsx","components/DisplaySection/DisplaySection.tsx","components/ChatPages/UserSelect.tsx","components/ChatPages/SingleChat.tsx","components/ChatPages/ChatPages.tsx","components/BasePage/BasePage.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","title","chats","setChats","totalUsers","setTotalUsers","console","log","length","addChatDisabled","className","onClick","newChat","groupName","users","disabled","newUser","name","Math","floor","random","Footer","DisplaySection","UserSelect","chatUsers","useState","currentUser","setCurrentUser","userMap","reduce","acc","user","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","map","MenuItem","SingleChat","chat","x","placeholder","ChatPages","BasePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52938662.chunk.js","sourcesContent":["import React, {Dispatch, SetStateAction} from 'react'\nimport './Header.css'\nimport {Chat, User} from \"../../types/utils\";\n\ntype HeaderProps = {\n  title?: string\n  chats: Chat[]\n  setChats: Dispatch<SetStateAction<Chat[]>>\n  totalUsers: User[]\n  setTotalUsers: Dispatch<SetStateAction<User[]>>\n}\n\nconst Header: React.FC<HeaderProps> = ({\n                                         title,\n                                         chats,\n                                         setChats,\n                                         totalUsers,\n                                         setTotalUsers\n                                       }) => {\n  \n  const handleAddUser = () => {\n    const newUser: User = {\n      name: `User${Math.floor(Math.random() * 1000)}`\n    }\n    \n    setTotalUsers([...totalUsers, newUser])\n  }\n  \n  const handleAddChat = () => {\n    const newChat: Chat = {\n      groupName: 'New Group',\n      users: [...totalUsers]\n    }\n    setChats([...chats, newChat])\n  }\n  \n  console.log('=====> totalUsers.length', totalUsers.length > 0)\n  const addChatDisabled = totalUsers.length < 1\n  console.log('=====> addChatDisabled', addChatDisabled)\n  return (\n    <div className={'header'}>\n      {title || 'Header Here'}\n      <button\n        className={'addButton'}\n        onClick={handleAddChat}\n        disabled={addChatDisabled}\n      >\n        {'Add Chat'}\n      </button>\n      <button\n        className={'addButton'}\n        onClick={handleAddUser}\n      >\n        {'Add User'}\n      </button>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\nimport './Footer.css'\n\ntype FooterProps = {\n  title?: string;\n}\n\nconst Footer: React.FC<FooterProps> = ({title}) => {\n  return (\n    <div className={'footer'}>\n      {title || 'Footer Here'}\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './DisplaySection.css'\n\ntype DisplaySectionProps = Record<string, string>\n\nconst DisplaySection: React.FC<DisplaySectionProps> = () => {\n  return (\n    <div className={'displaySection'}>\n      {'Display Section Here'}\n    </div>\n  )\n}\n\nexport default DisplaySection","import React, {useState} from 'react'\nimport './UserSelect.css'\nimport {User} from '../../types/utils';\nimport {FormControl, InputLabel, MenuItem, Select, SelectChangeEvent} from '@mui/material';\n\ntype UserSelectProps = {\n  chatUsers: User[]\n}\n\nconst UserSelect: React.FC<UserSelectProps> = ({chatUsers}) => {\n  const [currentUser, setCurrentUser] = useState<User>(chatUsers[0])\n  const userMap: Record<string, User> = chatUsers.reduce((acc, user) => ({ ...acc, [user.name]: user}), {})\n  const handleChangeUser = (event: SelectChangeEvent) => {\n    setCurrentUser(userMap[event.target.value as string])\n  }\n  \n  return (\n    <div>\n      <FormControl fullWidth>\n        <InputLabel id='select-user-label'>\n          {'User'}\n        </InputLabel>\n        <Select\n          labelId='select-user-label'\n          id='select-user'\n          value={currentUser.name}\n          label='User'\n          onChange={handleChangeUser}\n        >\n          {\n            chatUsers.map(user => (\n                <MenuItem value={user.name}>\n                  {user.name}\n                </MenuItem>\n              )\n            )\n          }\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nexport default UserSelect","import React from 'react'\nimport './SingleChat.css'\nimport {Chat, User} from \"../../types/utils\";\nimport UserSelect from \"./UserSelect\";\n\ntype SingleChatProps = {\n  chat: Chat\n  totalUsers: User[]\n}\n\nconst SingleChat: React.FC<SingleChatProps> = ({chat, totalUsers}) => {\n  return (\n    <div className={'singleChat'}>\n      <div className={'groupName'}>\n        {chat.groupName}\n      </div>\n      <div className={'userNames'}>\n        {\n          chat.users.map(x => <div>{` - ${x.name}`}</div>)\n        }\n      </div>\n      <div className={'chatInputWrapper'}>\n        <input\n          placeholder={'Text Goes Here'}\n        />\n        <UserSelect chatUsers={chat.users}/>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleChat","import React from 'react'\nimport './ChatPages.css'\nimport {Chat, User} from \"../../types/utils\";\nimport SingleChat from \"./SingleChat\";\n\ntype ChatPagesProps = {\n  chats: Chat[],\n  totalUsers: User[]\n}\n\nconst ChatPages: React.FC<ChatPagesProps> = ({chats, totalUsers}) => {\n  return (\n    <div className={'chatPages'}>\n      {\n        chats.length > 0\n          ? chats.map(chat => <SingleChat chat={chat} totalUsers={totalUsers}/>)\n          : 'No Chats Available'\n      }\n    </div>\n  )\n}\n\nexport default ChatPages","import React from 'react'\nimport './BasePage.css'\nimport DisplaySection from \"../DisplaySection/DisplaySection\";\nimport ChatPages from \"../ChatPages/ChatPages\";\nimport {Chat, User} from \"../../types/utils\";\n\ntype BasePageProps = {\n  chats: Chat[]\n  totalUsers: User[]\n}\n\nconst BasePage: React.FC<BasePageProps> = ({chats, totalUsers}) => {\n  return (\n    <div className={'basePage'}>\n      <DisplaySection />\n      <ChatPages chats={chats} totalUsers={totalUsers}/>\n    </div>\n  )\n}\n\nexport default BasePage","import React, {useState} from 'react';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\nimport BasePage from \"./BasePage/BasePage\";\nimport {Chat, User} from \"../types/utils\";\n\nfunction App() {\n  \n  const [chats, setChats] = useState<Chat[]>([])\n  const [totalUsers, setTotalUsers] = useState<User[]>([])\n  \n  return (\n    <div className={'App'}>\n      <Header\n        title={'Texing FF Helper'}\n        setChats={setChats}\n        chats={chats}\n        totalUsers={totalUsers}\n        setTotalUsers={setTotalUsers}\n      />\n      <BasePage\n        chats={chats}\n        totalUsers={totalUsers}\n      />\n      <Footer title={'Created by Yours Truly'}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}